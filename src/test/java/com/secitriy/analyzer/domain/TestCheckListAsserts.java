package com.secitriy.analyzer.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TestCheckListAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCheckListAllPropertiesEquals(TestCheckList expected, TestCheckList actual) {
        assertTestCheckListAutoGeneratedPropertiesEquals(expected, actual);
        assertTestCheckListAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCheckListAllUpdatablePropertiesEquals(TestCheckList expected, TestCheckList actual) {
        assertTestCheckListUpdatableFieldsEquals(expected, actual);
        assertTestCheckListUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCheckListAutoGeneratedPropertiesEquals(TestCheckList expected, TestCheckList actual) {
        assertThat(expected)
            .as("Verify TestCheckList auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCheckListUpdatableFieldsEquals(TestCheckList expected, TestCheckList actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCheckListUpdatableRelationshipsEquals(TestCheckList expected, TestCheckList actual) {
        assertThat(expected)
            .as("Verify TestCheckList relationships")
            .satisfies(e -> assertThat(e.getCheckList()).as("check checkList").isEqualTo(actual.getCheckList()))
            .satisfies(e -> assertThat(e.getSecurityTest()).as("check securityTest").isEqualTo(actual.getSecurityTest()));
    }
}
